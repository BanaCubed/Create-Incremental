.upg, .buyable {
	min-height: 11rem;
	width: 23rem;
	border: 0.4rem solid;
	border-color: rgba(0, 0, 0, 0.25);
	overflow: visible;
	padding: 0.5rem;
	margin: 0.25rem;
}

.upgBuy {
	border: 0.4rem solid;
	border-color: rgba(0, 0, 0, 0.25);
}

.currencyDisplayHeader {
	margin: auto 0.25rem !important;
}

.currencyDisplayHeader.uhoh {
	margin: 0.25rem auto !important;
}

body {
	--cash:      hsla(115, 100%, 25%, 100%);
	--cashBG:    hsla(115, 100%, 25%, 25%);
	--rebirth:   hsla(345, 100%, 45%, 100%);
	--rebirthBG: hsla(345, 100%, 45%, 25%);
	--super:     hsl(15, 70%, 50%);
	--superBG:   hsla(15, 70%, 50%, 25%);
	--power:     hsla(60, 100%, 50%, 100%);
	--powerBG:   hsla(60, 100%, 50%, 25%);
	--tech:      hsla(0, 0%, 40%, 100%);
	--techBG:    hsla(0, 0%, 40%, 25%);
	--cursed:    hsla(300, 100%, 75%, 100%);
	--cursedBG:  hsla(300, 100%, 75%, 25%);
	--blessed:   hsla(60, 100%, 75%, 100%);
	--blessedBG: hsla(60, 100%, 75%, 25%);
	--radio:     hsla(120, 100%, 75%, 100%);
	--radioBG:   hsla(120, 100%, 75%, 25%);
	--hyper:     hsla(180, 100%, 30%, 100%);
	--hyperBG:   hsla(180, 100%, 30%, 25%);
	--matter:    hsla(195, 80%, 30%, 100%);
	--matterBG:  hsla(195, 80%, 30%, 25%);
	--amatter:   hsla(0, 70%, 60%, 100%);
	--amatterBG: hsla(0, 70%, 60%, 25%);
	--dmatter:   hsl(0, 0%, 25%);
	--dmatterBG: hsla(0, 0%, 25%, 25%);
	--ematter:   hsl(290, 70%, 60%);
	--ematterBG: hsla(290, 70%, 60%, 25%);
	--hcash:     hsla(140, 80%, 55%, 100%);
	--hcashBG:   hsla(140, 80%, 55%, 25%);
	--universe:  hsla(280, 95%, 40%, 100%);
	--universeBG:hsla(280, 95%, 40%, 25%);
}

.cash.upg       { background-color: var(--cashBG); }
.rebirth.upg    { background-color: var(--rebirthBG); }
.super.upg      { background-color: var(--superBG); }
.power.upg      { background-color: var(--powerBG); }
.machine.upg    { background-color: var(--techBG); }
.tax.upg        { background-color: var(--cursedBG); }
.hyper.upg      { background-color: var(--hyperBG); }
.matter.upg     { background-color: var(--matterBG); }
.antimatter.upg { background-color: var(--amatterBG); }
.darkmatter.upg { background-color: var(--dmatterBG); }
.exomatter.upg  { background-color: var(--ematterBG); }
.radio.upg      { background-color: var(--radioBG); }
.hcash.upg      { background-color: var(--hcashBG); }
.universe.upg   { background-color: var(--universeBG); }
.blackhole.upg  { background-color: var(--universeBG); }

.c           { color: var(--cash); }
.r           { color: var(--rebirth); }
.s           { color: var(--super); }
.p           { color: var(--power); }
.m           { color: var(--tech); }

.cash.can       { background-color: var(--cash); }
.rebirth.can    { background-color: var(--rebirth); }
.super.can      { background-color: var(--super); }
.power.can      { background-color: var(--power); }
.machine.can    { background-color: var(--tech); }
.hyper.can      { background-color: var(--hyper); }
.matter.can     { background-color: var(--matter); }
.antimatter.can { background-color: var(--amatter); }
.darkmatter.can { background-color: var(--dmatter); }
.exomatter.can  { background-color: var(--ematter); }
.blackhole.can  { background-color: var(--universe); }

button {
	border-style: solid;
	border-width: 0.4rem;
	border-color: hsla(0, 0%, 100%, 25%);
	color: white;
	min-height: 3.5rem
}

.achievement {
	height: 9rem;
	width: 9rem;
	border: 0.4rem solid;
	border-color: rgba(0, 0, 0, 0.125);
	color: white;
	text-shadow: 0 0 0.2rem 0.1rem #000000;
}

.achievement:hover {
	box-shadow: 0 0 1rem var(--points);
	z-index: 7;
}

.cash.buyable    { background-color: rgba(21, 115, 7, 0.25); }
.rebirth.buyable { background-color: rgba(186, 0, 34, 0.25); }
.super.buyable   { background-color: rgba(251, 26, 61, 0.25); }
.power.buyable   { background-color: rgba(214, 198, 17, 0.25); }

.milestone, .milestoneDone {
	width: calc(100% - 0.5rem);
	min-height: 7.5rem;
	text-align: center;
    background-size: contain;
    background-repeat: no-repeat;
}

.milestoneDone h2 {
	color: #77bf5f;
}

.milestone h2 {
	color: #bf8f8f;
}

.challenge {
	color: #bf8f8f;
	position: relative;
	border: 0.4rem solid;
	border-color: rgba(0, 0, 0, 0.25);
	width: 36rem;
	height: 20rem;
}

.challenge.done {
	color: #77bf5f;
}

.challenge.canComplete {
	color: #ffbf00;
}

/* Infoboxes */
.story {
    width: 60rem;
    max-width: 95%;
    border-bottom: solid 0.4rem;
    border-radius: 2rem;
    margin-bottom: 0.8rem;
    text-align: left;
}

.story-title {
    text-align: left;
    font-size: 2.4rem;
    color: black;
    cursor: pointer;
    border: none;
    padding: 0.2rem;
    border-radius: 0.8rem 0.8rem 0 0;
}

.story-toggle {
    border: none;
    background: black;
    color: white;
    font-size: 2rem;
    pointer-events: none;
    width: 1em;
    display: inline-block;
}

.story-text {
	padding: 0.2rem;
    border: solid 0.4rem;
    border-color: inherit;
    border-radius: inherit;
    border-top-left-radius: 0;
    margin-bottom: -0.2rem;
}


/* Tiles are gridables */
.tile {
	height: 8rem;
	width: 8rem;
	border-radius: 1.2rem;
	border: 0.4rem solid;
	border-color: rgba(0, 0, 0, 0.125);
	font-size: 1rem;
	overflow: visible;
}

.tile.can:hover {
	box-shadow: 0 0 1rem var(--points);
	transform: scale(1.1, 1.1);
	z-index: 7;
}

.upgBig {
	height: 20rem;
	width: 20rem;
	border-radius: 2rem;
	border: 0.4rem solid;
	border-color: rgba(0, 0, 0, 0.125);
}

/* Used for respec button and similar */
.longUpg {
	min-height: 3.5rem;
	width: 11rem;
	border: 0.4rem solid;
	border-color: rgba(255, 255, 255, 0.25);
	font-size: 1.1rem;
	overflow: visible;
	padding: 1rem;
}

.smallUpg {
	height: 4rem;
	width: 4rem;
	border-radius: 1rem;
	border: 0.4rem solid;
	border-color: rgba(0, 0, 0, 0.125);
}

#theorization {
	margin: auto; width: 514px; max-width: calc(100vw - 40px);
	background-image: linear-gradient(0deg, var(--radioBG), var(--ematterBG));
	background-color: transparent;
	transition: none;
	background-clip: padding-box;
	border: none;
	margin-top: -0.9rem;
	box-shadow: inset 0 0 0 0.4rem rgba(0, 0, 0, 0.25);
	padding: 0.9rem;
}
